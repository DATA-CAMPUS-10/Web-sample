{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\sample\\\\sample\\\\src\\\\components\\\\UI\\\\InputComponents.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputComponent({\n  handleInputChange\n}) {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [extractedText, setExtractedText] = useState('');\n  const handleImageUpload = async e => {\n    const image = e.target.files[0];\n    setSelectedImage(image);\n\n    // 서버로 이미지를 업로드하고 텍스트를 추출\n    const formData = new FormData();\n    formData.append('image', image);\n    try {\n      const response = await axios.post('http://localhost:5000/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('Upload successful:', response.data);\n      setExtractedText(response.data.text);\n    } catch (error) {\n      console.error('Error during image upload:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-component\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"input-textarea\",\n      placeholder: \"\\uC57D\\uAD00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n      value: extractedText,\n      onChange: handleInputChange,\n      style: {\n        whiteSpace: 'pre-wrap'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: URL.createObjectURL(selectedImage),\n      alt: \"Uploaded\",\n      style: {\n        width: '200px',\n        height: 'auto',\n        maxWidth: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(InputComponent, \"mdNWQSmPpjGTAXXr1Br/eMCSdoM=\");\n_c = InputComponent;\nexport default InputComponent;\nvar _c;\n$RefreshReg$(_c, \"InputComponent\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","InputComponent","handleInputChange","_s","selectedImage","setSelectedImage","extractedText","setExtractedText","handleImageUpload","e","image","target","files","formData","FormData","append","response","post","headers","console","log","data","text","error","className","children","placeholder","value","onChange","style","whiteSpace","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","src","URL","createObjectURL","alt","width","height","maxWidth","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/sample/sample/src/components/UI/InputComponents.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction InputComponent({ handleInputChange }) {\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [extractedText, setExtractedText] = useState('');\r\n\r\n  const handleImageUpload = async (e) => {\r\n    const image = e.target.files[0];\r\n    setSelectedImage(image);\r\n\r\n    // 서버로 이미지를 업로드하고 텍스트를 추출\r\n    const formData = new FormData();\r\n    formData.append('image', image);\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      console.log('Upload successful:', response.data);\r\n      setExtractedText(response.data.text);\r\n    } catch (error) {\r\n      console.error('Error during image upload:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"input-component\">\r\n      <textarea\r\n        className=\"input-textarea\"\r\n        placeholder=\"약관을 입력하세요...\"\r\n        value={extractedText}\r\n        onChange={handleInputChange}\r\n        style={{ whiteSpace: 'pre-wrap' }}\r\n      />\r\n      <input type=\"file\" accept=\"image/*\" onChange={handleImageUpload} />\r\n      {/* 이미지 미리보기 */}\r\n      {selectedImage && (\r\n        <img\r\n          src={URL.createObjectURL(selectedImage)}\r\n          alt=\"Uploaded\"\r\n          style={{ width: '200px', height: 'auto', maxWidth: '100%' }}\r\n        />\r\n      )}\r\n      {/* 이미지 미리보기 */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,cAAcA,CAAC;EAAEC;AAAkB,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMW,iBAAiB,GAAG,MAAOC,CAAC,IAAK;IACrC,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC/BP,gBAAgB,CAACK,KAAK,CAAC;;IAEvB;IACA,MAAMG,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEL,KAAK,CAAC;IAE/B,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,kCAAkC,EAAEJ,QAAQ,EAAE;QAC9EK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEJ,QAAQ,CAACK,IAAI,CAAC;MAChDd,gBAAgB,CAACS,QAAQ,CAACK,IAAI,CAACC,IAAI,CAAC;IACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BzB,OAAA;MACEwB,SAAS,EAAC,gBAAgB;MAC1BE,WAAW,EAAC,sDAAc;MAC1BC,KAAK,EAAErB,aAAc;MACrBsB,QAAQ,EAAE1B,iBAAkB;MAC5B2B,KAAK,EAAE;QAAEC,UAAU,EAAE;MAAW;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACFlC,OAAA;MAAOmC,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,SAAS;MAACR,QAAQ,EAAEpB;IAAkB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAElE9B,aAAa,iBACZJ,OAAA;MACEqC,GAAG,EAAEC,GAAG,CAACC,eAAe,CAACnC,aAAa,CAAE;MACxCoC,GAAG,EAAC,UAAU;MACdX,KAAK,EAAE;QAAEY,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAO;IAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEE,CAAC;AAEV;AAAC/B,EAAA,CA9CQF,cAAc;AAAA2C,EAAA,GAAd3C,cAAc;AAgDvB,eAAeA,cAAc;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}